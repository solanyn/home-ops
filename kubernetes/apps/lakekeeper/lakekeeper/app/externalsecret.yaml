apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: lakekeeper
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: lakekeeper-secret
    template:
      data:
        INIT_POSTGRES_DBNAME: catalog
        INIT_POSTGRES_HOST: postgres17-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: &dbUser "{{ .LAKEKEEPER_POSTGRES_USER }}"
        INIT_POSTGRES_PASS: &dbPass "{{ .LAKEKEEPER_POSTGRES_PASSWORD }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
        LAKEKEEPER__PG_DATABASE_URL_READ: "postgresql://{{.LAKEKEEPER_POSTGRES_USER}}:{{.LAKEKEEPER_POSTGRES_PASSWORD}}@postgres17-r.database.svc.cluster.local:5432/catalog"
        LAKEKEEPER__PG_DATABASE_URL_WRITE: "postgresql://{{.LAKEKEEPER_POSTGRES_USER}}:{{.LAKEKEEPER_POSTGRES_PASSWORD}}@postgres17-rw.database.svc.cluster.local:5432/catalog"
        LAKEKEEPER__AUTHZ_BACKEND: allowall
        LAKEKEEPER_POSTGRES_USER: *dbUser
        LAKEKEEPER_POSTGRES_PASSWORD: *dbPass
        LAKEKEEPER__PG_ENCRYPTION_KEY: "{{ .LAKEKEEPER_SECRET_KEY }}"
        LAKEKEEPER__OPENID_PROVIDER_URI: https://id.goyangi.cloud
        LAKEKEEPER__OPENID_AUDIENCE: "{{ .LAKEKEEPER_CLIENT_ID }}"
        LAKEKEEPER__UI__OPENID_CLIENT_ID: "{{ .LAKEKEEPER_CLIENT_ID }}"
        LAKEKEEPER__UI__OPENID_SCOPE: "openid profile email"
  dataFrom:
    - extract:
        key: lakekeeper
    - extract:
        key: minio
    - extract:
        key: cloudnative-pg

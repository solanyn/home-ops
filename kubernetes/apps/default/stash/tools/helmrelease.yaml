# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: stash-tools
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: stash
      namespace: default
  values:
    controllers:
      scan:
        type: cronjob
        cronjob: &cronJobSpec
          schedule: "@hourly"
          timeZone: &timeZone Australia/Sydney
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        containers:
          tag: &container
            image:
              repository: quay.io/curl/curl
              tag: 8.14.1
            command:
              - sh
              - -c
              - |
                curl -sS -X POST "$STASH_URL" \
                  -H "Content-Type: application/json" \
                  -d "$GRAPHQL_QUERY"
            env:
              STASH_URL: http://stash.default.svc.cluster.local:9999/graphql
              GRAPHQL_QUERY: |
                {
                  "query": "mutation {
                    metadataScan(input: {
                      paths: [\"/media\"],
                      scanGenerateCovers: true,
                      scanGeneratePreviews: true,
                      scanGenerateImagePreviews: true,
                      scanGenerateSprites: true,
                      scanGeneratePhashes: true,
                      scanGenerateThumbnails: true,
                      scanGenerateClipPreviews: true
                    })
                  }"
                }
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
          identify:
            !!merge <<: *container
            env:
              GRAPHQL_QUERY: |
                {
                  "query": "mutation {
                    metadataIdentify(input: {
                      sources: [\"stashdb\", \"fansdb\"],
                      options: {
                        fieldOptions: [
                          { field: \"name\", strategy: \"MERGE\", createMissing: true },
                          { field: \"image\", strategy: \"MERGE\", createMissing: true },
                          { field: \"performers\", strategy: \"MERGE\", createMissing: true },
                          { field: \"studios\", strategy: \"MERGE\", createMissing: true },
                          { field: \"tags\", strategy: \"MERGE\", createMissing: true }
                        ],
                        setCoverImage: true,
                        setOrganized: true,
                        includeMalePerformers: false
                      }
                    })
                  }"
                }
          autotag:
            !!merge <<: *container
            env:
              GRAPHQL_QUERY: |
                {
                  "query": "mutation {
                    metadataAutoTag(input: {
                      paths: [\"/media\"],
                      performers: [\"*\"],
                      studios: [\"*\"],
                      tags: [\"*\"]
                    })
                  }"
                }
        pod:
          restartPolicy: OnFailure
      maintenance:
        type: cronjob
        cronjob:
          !!merge <<: *cronJobSpec
          schedule: "@daily"
          suspend: false
        containers:
          clean-database:
            !!merge <<: *container
            env:
              GRAPHQL_QUERY: |
                {
                  "query": "mutation {
                    metadataAutoTag(input: {
                      paths: [\"/media\"],
                      performers: [\"*\"],
                      studios: [\"*\"],
                      tags: [\"*\"]
                    })
                  }"
                }
          clean-generated:
            !!merge <<: *container
            env:
              GRAPHQL_QUERY: |
                {
                  "query": "mutation {
                    metadataCleanGenerated(input: {
                      blobFiles: true,
                      sprites: true,
                      screenshots: true,
                      transcodes: true,
                      markers: true,
                      imageThumbnails: true,
                      dryRun: false
                    })
                  }"
                }
          optimise-database:
            !!merge <<: *container
            env:
              GRAPHQL_QUERY: |
                {
                  "query": "mutation {
                    optimiseDatabase
                  }"
                }
        pod:
          restartPolicy: OnFailure
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile: { type: RuntimeDefault }

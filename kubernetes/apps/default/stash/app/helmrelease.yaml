# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: stash
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: stash
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      stash:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: stashapp/stash
              tag: v0.28.1@sha256:645f6c15b079410d50d488dbeb247c92f25534094dad4e15d886e47648b897f7
            env:
              TZ: Australia/Sydney
              USER: 1000
              STASH_CONFIG_FILE: /config/config.yml
              STASH_STASH: /media
              STASH_GENERATED: /generated
              STASH_METADATA: /metadata
              STASH_CACHE: /cache
            probes:
              liveness: &probes
                enabled: true
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        ports:
          http:
            port: 9999
    route:
      app:
        hostnames: ["{{ .Release.Name }}.goyangi.io"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
          - path: /.cache
      config:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /config
            subPath: config
          - path: /blobs
            subPath: blobs
          - path: /generated
            subPath: generated
      cache:
        existingClaim: "{{ .Release.Name }}-cache"
        globalMounts:
          - path: /cache
            subPath: cache
      media:
        type: nfs
        server: nas.internal
        path: /mnt/world/media
        globalMounts:
          - path: /media
            subPath: downloads/torrents/complete/other
            readOnly: true

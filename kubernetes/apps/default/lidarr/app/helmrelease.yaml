# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          change-ownership:
            image:
              repository: alpine
              tag: 3.21.2@sha256:56fa17d2a7e7f168a043a2712e63aed1f8543aeafdcee47c58dcffe38ed51099
            command: ["sh", "-c"]
            args: >-
              cp /secret/config.xml /config/config.xml; chown $PUID:$PGID /config/config.xml;
            env:
              PUID: 1000
              PGID: 1000
          init-db:
            image:
              repository: ghcr.io/solanyn/postgres-init
              tag: 16.6
            envFrom: &envFrom
              - secretRef:
                  name: lidarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/solanyn/lidarr-develop
              tag: 2.9.6@sha256:056914a6576d5f8a5a984499f457d5e6eabf61611e9d93c8ce35c77d0a5a55f9
            env:
              LIDARR__APP__INSTANCENAME: Lidarr
              LIDARR__APP__THEME: dark
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
              LIDARR__SERVER__PORT: &port 80
              LIDARR__LOG_LEVEL: info
              LIDARR__UPDATE__BRANCH: develop
              TZ: Australia/Sydney
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.goyangi.cloud
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.goyangi.cloud"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      config-file:
        type: secret
        name: lidarr-secret
        globalMounts:
          - path: /secret/config.xml
            subPath: config.xml
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: nas.internal
        path: /mnt/world/media
        globalMounts:
          - path: /media

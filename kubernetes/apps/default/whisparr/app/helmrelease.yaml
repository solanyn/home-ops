# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app whisparr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      whisparr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          change-ownership:
            image:
              repository: alpine
              tag: 3.21.3@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c
            command: ["sh", "-c"]
            args: >-
              cp /secret/config.xml /config/config.xml; chown $PUID:$PGID /config/config.xml;
            env:
              PUID: 1000
              PGID: 1000
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: whisparr-secret
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/whisparr
              tag: 2.0.0@sha256:306d09899222de4ef25537c8f9390a7a87fdbe22785eed1ac93ca6da8cbefa38
            env:
              # NOTE: Environment variables only work because onedr0p containers do some cool things to turn ENV variables to config.xml
              WHISPARR__APP__INSTANCENAME: whisparr
              WHISPARR__APP__THEME: dark
              WHISPARR__AUTH__METHOD: External
              WHISPARR__AUTH__REQUIRED: DisabledForLocalAddresses
              WHISPARR__SERVER__PORT: &port 80
              WHISPARR__LOG_LEVEL: info
              WHISPARR__UPDATE__BRANCH: develop
              TZ: Australia/Sydney
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: whisparr
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.goyangi.cloud"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      config:
        existingClaim: whisparr
      # NOTE: While ENV variable config is not available
      config-file:
        type: secret
        name: whisparr-secret
        globalMounts:
          - path: /secret/config.xml
            subPath: config.xml
      tmp:
        type: emptyDir
        sizeLimit: 1Gi
      media:
        type: nfs
        server: nas.internal
        path: /mnt/world/media
        globalMounts:
          - path: /media

# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyseerr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: jellyseerr
  values:
    controllers:
      jellyseerr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
        containers:
          app:
            image:
              repository: docker.io/fallenbagel/jellyseerr
              tag: 2.7.3@sha256:4538137bc5af902dece165f2bf73776d9cf4eafb6dd714670724af8f3eb77764
            env:
              TZ: Australia/Sydney
              LOG_LEVEL: "info"
              PORT: &port 80
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.goyangi.io"
          - requests.goyangi.io
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /app/config
      config-cache:
        existingClaim: "{{ .Release.Name }}-cache"
        globalMounts:
          - path: /app/config/cache
      tmpfs:
        type: emptyDir
        advancedMounts:
          jellyseerr:
            app:
              - path: /app/config/logs
                subPath: logs
              - path: /tmp
                subPath: tmp


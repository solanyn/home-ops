# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbtools
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      tagging:
        type: cronjob
        cronjob: &cronJobSpec
          schedule: "@hourly"
          timeZone: &timeZone Australia/Sydney
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        initContainers:
          tag: &container
            image:
              repository: ghcr.io/buroa/qbtools
              tag: v0.19.15@sha256:4145020bab12b2ed892f548c2812c4979793def80dce5f907e49640329e54933
            env:
              QBITTORRENT_HOST: qbittorrent.default.svc.cluster.local
              QBITTORRENT_PORT: 80
              TZ: *timeZone
            args: ["tagging", "--added-on", "--expired", "--last-activity", "--sites", "--unregistered"]
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256M
        containers:
          unregistered:
            !!merge <<: *container
            args: ["prune", "--exclude-category", "manual", "--include-tag", "unregistered", "--with-data",
              # "--dry-run",
            ]
          expired:
            !!merge <<: *container
            args: ["prune", "--exclude-category", "manual", "--exclude-category", "seed", "--exclude-category", "music", "--exclude-category", "audiobooks", "--exclude-category", "other", "--exclude-category", "readarr", "--include-category", "hit-and-run", "--exclude-tag", "added:1d", "--include-tag", "expired", "--with-data",
              # "--dry-run",
            ]
        pod:
          restartPolicy: OnFailure
      orphaned:
        type: cronjob
        cronjob:
          !!merge <<: *cronJobSpec
          schedule: "@daily"
          suspend: false
        containers:
          app:
            !!merge <<: *container
            args: ["orphaned", "--exclude-pattern", "*_unpackerred*",
              # "--dry-run",
            ]
        pod:
          restartPolicy: OnFailure
      reannounce:
        containers:
          app:
            !!merge <<: *container
            args: ["reannounce", "--process-seeding"]
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile: {type: RuntimeDefault}
    persistence:
      secret-file:
        type: secret
        name: qbtools-config-secret
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
      media:
        type: nfs
        server: nas.internal
        path: /mnt/world/media
        advancedMounts:
          orphaned:
            app:
              - path: /media/downloads/torrents
                subPath: downloads/torrents

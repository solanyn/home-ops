# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: romm
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      romm:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
        containers:
          app:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 4.1.5@sha256:fdd5ef2db8690d883704ac75efd001a5e64b447117e7aafc514be202c7d3c13c
            env:
              ENABLE_SCHEDULED_RESCAN: true
              SCHEDULED_RESCAN_CRON: "0 3 * * *"
              HASHEOUS_API_ENABLED: true
              PLAYMATCH_API_ENABLED: true
              ROMM_DB_DRIVER: postgresql
              ROMM_BASE_URL: https://romm.goyangi.io
              DISABLE_DOWNLOAD_ENDPOINT_AUTH: true
              TZ: Australia/Sydney
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 3Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        ports:
          http:
            port: 8080
    route:
      app:
        hostnames: ["{{ .Release.Name }}.goyangi.io"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      config:
        type: configMap
        name: romm-configmap
        globalMounts:
          - path: /romm/config/config.yml
            subPath: config.yml
            readOnly: true
      data:
        existingClaim: *app
        advancedMounts:
          romm:
            app:
              - path: /romm/resources
                subPath: resources
              - path: /romm/assets
                subPath: assets
      media:
        type: nfs
        server: nas.internal
        path: /mnt/world/media/games
        globalMounts:
          - path: /romm/library
      tmpfs:
        type: emptyDir
        advancedMounts:
          romm:
            app:
              - path: /romm/config
                subPath: config
              - path: /tmp
                subPath: tmp

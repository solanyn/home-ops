# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: jupyter
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: jupyter-secret
    template:
      data:
        values.yaml: |
          fullnameOverride: jupyter
          singleuser:
            defaultUrl: "/lab"
            extraEnv:
              JUPYTERHUB_SINGLEUSER_APP: "jupyter_server.serverapp.ServerApp"
            cpu:
              guarantee: 0.010
            memory:
              limit: 16G
            # required for pytorch
            storage:
              dynamic:
                storageClass: openebs-hostpath
              extraVolumes:
                - name: shm-volume
                  emptyDir:
                    medium: Memory
              extraVolumeMounts:
                - name: shm-volume
                  mountPath: /dev/shm
          ingress:
            enabled: true
            ingressClassName: internal
            hosts: ["jupyter.goyangi.cloud"]
          cull:
            enabled: true
            users: true
            adminUsers: true
          hub:
            config:
              JupyterHub:
                admin_access: true
                admin_users:
                  - andrew
                authenticator_class: generic-oauth
              KubeSpawner:
                k8s_api_request_timeout: 10
              GenericOAuthenticator:
                client_id: "{{ .JUPYTER_CLIENT_ID }}"
                client_secret: "{{ .JUPYTER_CLIENT_SECRET }}"
                oauth_callback_url: https://jupyter.goyangi.cloud/hub/oauth_callback
                authorize_url: https://id.goyangi.cloud/authorize
                token_url: https://id.goyangi.cloud/api/oidc/token
                userdata_url: https://id.goyangi.cloud/api/oidc/userinfo
                login_service: Pocket ID
                username_claim: "email"
                userdata_params:
                  state: state
                allow_all: true
                admin_users:
                  - admin
            db:
              upgrade: true
              type: postgres
              url: "postgresql+psycopg2://{{ .JUPYTER_POSTGRES_USER }}:{{ .JUPYTER_POSTGRES_PASSWORD }}@postgres16-rw.database.svc.cluster.local:5432/jupyter"
            initContainers:
              - name: init-db
                image: ghcr.io/solanyn/postgres-init:16
                env:
                  - name: INIT_POSTGRES_DBNAME
                    value: "jupyter"
                  - name: INIT_POSTGRES_HOST
                    value: "postgres16-rw.database.svc.cluster.local"
                  - name: INIT_POSTGRES_USER
                    value: "{{ .JUPYTER_POSTGRES_USER }}"
                  - name: INIT_POSTGRES_PASS
                    value: "{{ .JUPYTER_POSTGRES_PASS }}"
                  - name: INIT_POSTGRES_SUPER_PASS
                    value: "{{ .POSTGRES_SUPER_PASS }}"
                  - name: INIT_POSTGRES_SUPER_USER
                    value: "{{ .POSTGRES_SUPER_USER }}"
                securityContext:
                  runAsUser: 1000
                  runAsGroup: 1000
                  fsGroup: 1000
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
  dataFrom:
    - extract:
        key: jupyter
    - extract:
        key: cloudnative-pg

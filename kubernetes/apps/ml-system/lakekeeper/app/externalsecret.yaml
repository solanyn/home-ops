# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: lakekeeper
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: lakekeeper-secret
    template:
      data:
        INIT_POSTGRES_DBNAME: "lakekeeper"
        INIT_POSTGRES_HOST: "postgres16-rw.database.svc.cluster.local"
        INIT_POSTGRES_USER: "{{ .LAKEKEEPER_POSTGRES_USER }}"
        INIT_POSTGRES_PASS: "{{ .LAKEKEEPER_POSTGRES_PASSWORD }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
        INIT_POSTGRES_SUPER_USER: "{{ .POSTGRES_SUPER_USER }}"
        encryptionKey: "{{ .LAKEKEEPER_ENCRYPTION_KEY }}"
        values.yaml: |
          fullnameOverride: lakekeeper
          catalog:
            annotations:
              reloader.stakater.com/auto: "true"
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
          ingress:
            enabled: true
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /
            host: lakekeeper.goyangi.cloud
            ingressClassName: internal
          secretBackend:
            postgres:
              encryptionKeySecret: lakekeeper-secret
              encyptionKeySecretKey: encryptionKey
          postgresql:
            enabled: false
          externalDatabase:
            host_read: postgres16-w.database.svc.cluster.local
            host_write: postgres16-rw.database.svc.cluster.local
            database: lakekeeper
            user: "{{ .LAKEKEEPER_POSTGRES_USER }}"
            password: "{{ .LAKEKEEPER_POSTGRES_PASSWORD }}"
          auth:
            oauth2:
              providerUri: https://id.goyangi.cloud
            ui:
              clientID: "{{ .LAKEKEEPER_OIDC_CLIENT_ID }}"
  dataFrom:
    - extract:
        key: cloudnative-pg
    - extract:
        key: lakekeeper

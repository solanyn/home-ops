# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 1h
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.16.5
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: volsync-system
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: internal
        host:
          name: "rook.goyangi.cloud"
          path: /
    toolbox:
      enabled: true
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
    cephClusterSpec:
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote
          osd_class_update_on_start: "false" # quote
          device_failure_prediction_mode: local # requires mgr module
      mon:
        count: 1
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      mgr:
        count: 1
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: true
        useAllDevices: false
        # TODO: change this after disks arrive!
        devicePathFilter: /dev/disk/by-id/nvme-SAMSUNG_MZVLQ256HAJD-000H1_.*
        # devicePathFilter: /dev/disk/by-id/sata-SAMSUNG
        config:
          osdsPerDevice: "1"
      resources:
        mgr:
          requests:
            # cpu: 100m
            cpu: 10m
            # memory: 512Mi
            memory: 10Mi
          limits:
            memory: 2Gi
        mon:
          requests:
            # cpu: 50m
            cpu: 10m
            # memory: 512Mi
            memory: 10Mi
          limits:
            memory: 1Gi
        osd:
          requests:
            # cpu: 200m
            cpu: 10m
            # memory: 2Gi
            memory: 10Mi
          limits:
            memory: 6Gi
        prepareosd:
          requests:
            cpu: 10m
            memory: 10Mi
        mgr-sidecar:
          requests:
            # cpu: 50m
            cpu: 10m
            # memory: 128Mi
            memory: 10Mi
          limits:
            memory: 256Mi
        crashcollector:
          requests:
            cpu: 10m
        logcollector:
          requests:
            cpu: 10m
        cleanup:
          requests:
            cpu: 10m
        exporter:
          requests:
            cpu: 10m
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: osd
          replicated:
            size: 1
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            compression_mode: aggressive
            compression_algorithm: zstd
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems: []
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: []

# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: oauth2-proxy
  namespace: kubeflow
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: oauth2-proxy-secret
    template:
      data:
        KUBEFLOW_OIDC_CLIENT_ID: kubeflow-oidc-authservice
        KUBEFLOW_OIDC_CLIENT_SECRET: "{{ .KUBEFLOW_OIDC_CLIENT_SECRET }}"
        KUBEFLOW_OAUTH2_PROXY_COOKIE_SECRET: "{{ .KUBEFLOW_OAUTH2_PROXY_COOKIE_SECRET }}"
  dataFrom:
    - extract:
        key: kubeflow
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: oauth2-proxy-config
  namespace: kubeflow
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: oauth2-proxy-config-secret
    template:
      data:
        oauth2-proxy.cfg: |
          provider = "oidc"
          oidc_issuer_url = "http://dex.kubeflow.svc.cluster.local:5556/dex"
          scope = "openid email groups profile offline_access"
          email_domains = [ "*" ]

          # serve a static HTTP 200 upstream on for authentication success
          # we are using oauth2-proxy as an ExtAuthz to "check" each request, not pass it on
          upstreams = [ "static://200" ]

          # skip authentication for these paths
          skip_auth_routes = [
            "^/dex/",
          ]

          # requests to paths matching these regex patterns will receive a 401 Unauthorized response
          # when not authenticated, instead of being redirected to the login page with a 302,
          # this prevents background requests being redirected to the login page,
          # and the accumulation of CSRF cookies
          api_routes = [
            # Generic
            # NOTE: included because most background requests contain these paths
            "/api/",
            "/apis/",

            # Kubeflow Pipelines
            # NOTE: included because KFP UI makes MANY background requests to these paths but because they are
            #       not `application/json` requests, oauth2-proxy will redirect them to the login page
            "^/ml_metadata",
          ]

          # OIDC Discovery has to be skipped and login url has to be provided directly
          # in order to enable relative auth redirect. Using OIDC Discovery would set
          # the redirect location to http://dex.kubeflow.svc.cluster.local:5556 in the example
          # installation. This address is usually not available through the Web Browser.
          skip_oidc_discovery = true
          login_url = "/dex/auth"
          redeem_url = "http://dex.kubeflow.svc.cluster.local:5556/dex/token"
          oidc_jwks_url = "http://dex.kubeflow.svc.cluster.local:5556/dex/keys"

          # if `false`, a sign-in page is displayed before starting the login flow
          # prevents background requests starting their own login flow on token expiry,
          # which can lead to many CSRF cookies, potentially exceeding the cookie limit
          skip_provider_button = false

          # style the sign-in page
          provider_display_name = "Dex"
          custom_sign_in_logo = "/custom-theme/kubeflow-logo.svg"
          banner = "-"
          footer = "-"

          # oauth2-proxy sends "force" by default, which causes dex to always prompt for login
          # https://github.com/dexidp/dex/pull/3086
          prompt = "none"

          # set Authorization Bearer response header. This is needed in order to
          # forward the Authorization Bearer token to Istio and enable authorization
          # based on JWT.
          set_authorization_header = true

          # set X-Auth-Request-User, X-Auth-Request-Groups, X-Auth-Request-Email and
          # X-Auth-Request-Preferred-Username. This is optional for Kubeflow but you
          # may have other services that use standard auth headers.
          set_xauthrequest = true

          cookie_name = "oauth2_proxy_kubeflow"
          cookie_path = "/"
          cookie_domains = []
          cookie_expire = "24h"
          cookie_refresh = "1h"
          cookie_secure = true
          cookie_httponly = true
          cookie_samesite = "lax"
          cookie_csrf_expire = "15m"
          cookie_csrf_per_request = true
          cookie_secret = "{{ .KUBEFLOW_OAUTH2_PROXY_COOKIE_SECRET }}"

          code_challenge_method = "S256"

          redirect_url = "https://kubeflow.goyangi.io/oauth2/callback"
          relative_redirect_url = false

          client_id = "{{ .KUBEFLOW_OIDC_CLIENT_ID }}"
          client_secret = "{{ .KUBEFLOW_OIDC_CLIENT_SECRET }}"
  dataFrom:
    - extract:
        key: kubeflow

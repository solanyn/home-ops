# yaml-language-server: $schema=https://kubernetes-schemas.solanyn.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: oauth2-proxy
  namespace: oauth2-proxy
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: oauth2-proxy-secret
    template:
      data:
        KUBEFLOW_OIDC_CLIENT_ID: kubeflow-oidc-authservice
        KUBEFLOW_OIDC_CLIENT_SECRET: "{{ .KUBEFLOW_OIDC_CLIENT_SECRET }}"
        KUBEFLOW_OAUTH2_PROXY_COOKIE_SECRET: "{{ .KUBEFLOW_OAUTH2_PROXY_COOKIE_SECRET }}"
  dataFrom:
    - extract:
        key: kubeflow
---
# yaml-language-server: $schema=https://kubernetes-schemas.solanyn.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: oauth2-proxy-config
  namespace: oauth2-proxy
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: oauth2-proxy-config-secret
    template:
      data:
        oauth2-proxy.cfg: |
          # serve a static HTTP 200 upstream on for authentication success
          # (this is because we are using oauth2-proxy as an ExtAuthz to "check" each request, not pass it on)
          upstreams = [
            "static://200"
          ]

          # requests to paths matching these regex patterns will receive a 401 Unauthorized response
          # when not authenticated, instead of being redirected to the login page with a 302
          # (prevents background requests being redirected to the login page, and the accumulation of CSRF cookies)
          api_routes = [
            # Generic
            # NOTE: included because most background requests contain these paths
            "/api/",
            "/apis/",

            # Kubeflow Pipelines
            # NOTE: included because KFP UI makes MANY background requests to these paths but because they are
            #       not `application/json` requests, oauth2-proxy will redirect them to the login page
            "^/ml_metadata",
          ]

          ##############
          # branding
          ###############
          custom_sign_in_logo = "/custom-theme/kubeflow-logo.svg"
          banner = "-"
          footer = "-"

          ###############
          # proxy
          ###############
          # reverse_proxy = true
          # real_client_ip_header = "X-Forwarded-For"

          ###############
          # logging
          ###############
          logging_filename = ""
          logging_max_size = 100
          logging_max_age = 7
          standard_logging = true
          request_logging = true
          auth_logging = true

          ###############
          # provider
          ###############
          provider = "oidc"
          provider_display_name = "Dex"

          client_id = "{{ .KUBEFLOW_OIDC_CLIENT_ID }}"
          client_secret = "{{ .KUBEFLOW_OIDC_CLIENT_SECRET }}"

          oidc_email_claim = "email"
          oidc_groups_claim = "groups"

          # specify the list of scopes to request
          # NOTE: offline_access enables refresh tokens (but not all dex connectors support it, notably SAML 2.0)
          #       https://dexidp.io/docs/custom-scopes-claims-clients/
          #       https://dexidp.io/docs/connectors/
          scope = "openid email groups profile offline_access"

          oidc_issuer_url = "https://kubeflow.goyangi.io/dex"
          redirect_url = "https://kubeflow.goyangi.io/oauth2/callback"

          email_domains = ["*"]

          skip_provider_button = false

          prompt = "none"
          insecure_oidc_skip_nonce = false

          set_authorization_header = true
          set_xauthrequest = true

          # use PKCE code challenges
          code_challenge_method = "S256"

          ###############
          # cookie
          ###############
          cookie_name = "oauth2_proxy_kubeflow"
          cookie_path = "/"
          cookie_domains = []
          cookie_expire = "24h"
          cookie_refresh = "1h"
          cookie_secure = true
          cookie_httponly = true
          cookie_samesite = "lax"
          cookie_csrf_expire = "15m"
          cookie_csrf_per_request = true
          cookie_secret = "{{ .KUBEFLOW_OAUTH2_PROXY_COOKIE_SECRET }}"
  dataFrom:
    - extract:
        key: kubeflow

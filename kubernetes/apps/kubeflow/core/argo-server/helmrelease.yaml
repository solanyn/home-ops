# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app argo-server
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      argo-server:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/argoproj/argocli
              tag: v3.5.14
            args:
              - server
              - --configmap=argo-server-config
              - --auth-mode=sso
            env:
              IN_CLUSTER: true
              ARGO_NAMESPACE:
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
              ARGO_SECURE: false
              FEEDBACK_MODAL: false
              FIRST_TIME_USER_MODAL: false
              NEW_VERSION_MODAL: false
              ARGO_BASE_HREF: ""
              ARGO_SSO_CLIENT_ID:
                valueFrom:
                  secretKeyRef:
                    name: kubeflow-auth-secret
                    key: client-id
            ports:
              - name: http
                containerPort: 2746
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 2746
                    scheme: HTTP
                  initialDelaySeconds: 10
                  periodSeconds: 20
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              runAsNonRoot: true
            resources:
              requests:
                cpu: 10m
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
    service:
      app:
        ports:
          http:
            port: 2746
    serviceAccount:
      identifier: *app
    route:
      app:
        hostnames: ["{{ .Release.Name }}.goyangi.io"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: 2746
    persistence:
      tmp:
        type: emptyDir

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: kserve
spec:
  interval: 1h
  type: oci
  url: oci://ghcr.io/kserve/charts/kserve
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kserve
spec:
  interval: 1h
  chart:
    spec:
      chart: kserve
      version: 0.12.1
      sourceRef:
        kind: HelmRepository
        name: kserve
        namespace: kubeflow
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      strategy: rollback
      retries: 3
  values:
    kserve:
      version: &defaultVersion v0.12.1
      modelmeshVersion: &defaultModelMeshVersion v0.11.2
      agent:
        image: kserve/agent
        tag: *defaultVersion
      router:
        image: kserve/router
        tag: *defaultVersion
      storage:
        image: kserve/storage-initializer
        tag: *defaultVersion
        s3:
          endpoint: "minio.default.svc.cluster.local"
          accessKeyIdName: AWS_ACCESS_KEY_ID
          secretAccessKeyName: AWS_SECRET_ACCESS_KEY
      controller:
        deploymentMode: "Serverless"
        rbacProxyImage: gcr.io/kubebuilder/kube-rbac-proxy:v0.16.0
        gateway:
          domain: goyangi.cloud
          domainTemplate: "{{ .Name }}-{{ .Namespace }}.{{ .IngressDomain }}"
          urlScheme: http
          disableIstioVirtualHost: false
          disableIngressCreation: false
          localGateway:
            gateway: knative-serving/knative-local-gateway
            gatewayService: cluster-local-gateway.kubeflow.svc.cluster.local
          ingressGateway:
            gateway: knative-serving/knative-ingress-gateway
            gatewayService: istio-ingressgateway.kubeflow.svc.cluster.local
            className: istio
        image: kserve/kserve-controller
        tag: *defaultVersion
      modelmesh:
        enabled: false

      servingruntime:
        modelNamePlaceholder: "{{.Name}}"
        tensorflow:
          image: tensorflow/serving
          tag: 2.6.2
        mlserver:
          image: docker.io/seldonio/mlserver
          tag: 1.3.2
          modelClassPlaceholder: "{{.Labels.modelClass}}"
        sklearnserver:
          image: kserve/sklearnserver
          tag: *defaultVersion
        xgbserver:
          image: kserve/xgbserver
          tag: *defaultVersion
        huggingfaceserver:
          image: kserve/huggingfaceserver
          tag: *defaultVersion
        tritonserver:
          image: nvcr.io/nvidia/tritonserver
          tag: 23.05-py3
        pmmlserver:
          image: kserve/pmmlserver
          tag: *defaultVersion
        paddleserver:
          image: kserve/paddleserver
          tag: *defaultVersion
        lgbserver:
          image: kserve/lgbserver
          tag: *defaultVersion
        torchserve:
          image: pytorch/torchserve-kfs
          tag: 0.9.0
          serviceEnvelopePlaceholder: "{{.Labels.serviceEnvelope}}"
        art:
          image: kserve/art-explainer
          defaultVersion: *defaultVersion

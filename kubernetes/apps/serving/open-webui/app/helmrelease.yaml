# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app open-webui
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      open-webui:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/open-webui/open-webui
              tag: main@sha256:26f0c76fcfe234ce6ad670fb65a9f772af0c263d261c2e2b3c784bae2d196c45
            env:
              DATA_DIR: /config
              ENABLE_SIGNUP: "false"
              ENABLE_LOGIN_FORM: "false"
              ENABLE_OAUTH_SIGNUP: "true"
              ENABLE_OPENAI_API: "true"
              CORS_ALLOW_ORIGIN: "https://open-webui.goyangi.io"
              DEFAULT_USER_ROLE: user
              OPENAI_API_BASE_URLS: https://kubeai.goyangi.io,https://litellm.goyangi.io
              OAUTH_PROVIDER_NAME: "Pocket ID"
              OFFLINE_MODE: "true"
              OPENID_PROVIDER_URL: "https://id.goyangi.io/.well-known/openid-configuration"
              OPENID_REDIRECT_URI: "https://open-webui.goyangi.io/oauth/oidc/callback"
              PORT: &port 80
              WEBUI_URL: http://0.0.0.0:3000
              VECTOR_DB: milvus
              MILVUS_URI: milvus.storage.svc.cluster.local:17530
              MILVUS_DB: open-webui
              # ENABLE_WEB_SEARCH: "true"
              # WEB_SEARCH_TRUST_ENV: "true"
              # WEB_SEARCH_ENGINE: searxng
              # SEARXNG_QUERY_URL: http://searxng.default.svc.cluster.local
              ENABLE_IMAGE_GENERATION: "true"
            envFrom:
              - secretRef:
                  name: open-webui-secret
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          search:
            port: 3000
    route:
      app:
        hostnames: ["{{ .Release.Name }}.goyangi.io"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      config:
        existingClaim: open-webui

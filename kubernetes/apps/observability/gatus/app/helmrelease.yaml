# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
spec:
  chartRef:
    kind: OCIRepository
    name: gatus
  interval: 1h
  values:
    controllers:
      gatus:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          gatus-sidecar:
            image:
              repository: ghcr.io/home-operations/gatus-sidecar
              tag: 0.0.9@sha256:31a52dd0e579c1f865b2580a4bb715d2a893deb1351fedeaba73598e9a578cbe
            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
            restartPolicy: Always
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.27.0@sha256:5091320d752756d7ac0a094d26ac38eb8216d7ed5857642b305522d1c6641f72
            env:
              TZ: Australia/Sydney
              GATUS_CONFIG_PATH: /config
              GATUS_LOG_LEVEL: DEBUG
              WEB_PORT: &port 80
            envFrom:
              - secretRef:
                  name: gatus-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources: *resources
        statefulset:
          volumeClaimTemplates:
            - name: config
              storageClass: ceph-block
              accessMode: ReadWriteOnce
              size: 5Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        endpoints:
          - port: http
            interval: 1m
            scrapeTimeout: 10s
    route:
      app:
        annotations:
          gatus.home-operations.com/enabled: "false"
        hostnames:
          - "{{ .Release.Name }}.goyangi.io"
          - status.goyangi.io
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https

    rbac:
      roles:
        gatus:
          type: ClusterRole
          rules:
            - apiGroups:
                - gateway.networking.k8s.io
              resources:
                - httproutes
              verbs:
                - get
                - watch
      bindings:
        gatus:
          type: ClusterRoleBinding
          roleRef:
            identifier: gatus
          subjects:
            - identifier: gatus
    serviceAccount:
      gatus: {}
    persistence:
      config-file:
        type: configMap
        name: "{{ .Release.Name }}-configmap"
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true

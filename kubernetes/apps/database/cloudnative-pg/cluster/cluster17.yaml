# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres17
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:17.2@sha256:b17d21f8ec36add9b3c0ea3fb354d05f62a8fddf8ba65ae94e63ba77bc42202e
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: "400"
      shared_buffers: 256MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 10m
      memory: 256Mi
    limits:
      hugepages-2Mi: 2Gi # Requires sysctl set on the host
      memory: 4Gi
  monitoring:
    enablePodMonitor: true
  bootstrap:
    initdb:
      import:
        schemaOnly: true
        type: monolith
        databases: ["*"]
        roles: ["*"]
        source:
          externalCluster: postgres16
  externalClusters:
  - name: postgres16
    connectionParameters:
      host: postgres16-rw.database.svc.cluster.local
      user: postgres
      dbname: postgres
    password:
      name: cloudnative-pg-secret
      key: password
  # backup:
  #   retentionPolicy: 14d
  #   barmanObjectStore: &barmanObjectStore
  #     data:
  #       compression: bzip2
  #     wal:
  #       compression: bzip2
  #       maxParallel: 8
  #     destinationPath: s3://cloudnative-pg/
  #     endpointURL: https://25450dc0f239d4e727e3488cfb31b5c4.r2.cloudflarestorage.com
  #     # Note: serverName version needs to be incremented
  #     # when recovering from an existing cnpg cluster
  #     serverName: &currentCluster postgres17-v1
  #     s3Credentials:
  #       accessKeyId:
  #         name: cloudnative-pg-secret
  #         key: aws-access-key-id
  #       secretAccessKey:
  #         name: cloudnative-pg-secret
  #         key: aws-secret-access-key
  # # NOTE: previousCluster needs to be set to the name of the previous
  # # cluster when recovering from an existing cnpg cluster
  # bootstrap:
  #   # NOTE: Set initdb and comment out recovery when no backup (the very first bootstrap)!
  #   # initdb:
  #   #   database: postgres17-v0
  #   #   owner: postgres
  #   recovery:
  #     source: &previousCluster postgres16-v11
  # # NOTE: externalClusters is needed when recovering from an EXISTING cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       !!merge <<: *barmanObjectStore
  #       serverName: *previousCluster

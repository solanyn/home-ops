---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dragonfly-operator
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: dragonfly
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      dragonfly-operator:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/dragonflydb/operator
              tag: v1.3.0@sha256:ee0daee0bb11185c984bbea92b0e8cc17a06ae4cd246e0d311c814f6948fd27e
            command: ["/manager"]
            args:
              - --health-probe-bind-address=:8081
              - --metrics-bind-address=:8080
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                cpu: 500m
                memory: 128Mi
        serviceAccount:
          identifier: *app
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
    service:
      app:
        ports:
          http:
            port: *port
          metrics:
            port: 8080
    serviceAccount:
      dragonfly-operator: {}
    serviceMonitor:
      app:
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    rbac:
      roles:
        dragonfly-operator:
          type: ClusterRole
          rules:
            - apiGroups: ["coordination.k8s.io"]
              resources: ["leases"]
              verbs:
                ["get", "list", "watch", "create", "update", "patch", "delete"]
            - apiGroups: [""]
              resources: ["events"]
              verbs: ["create", "patch"]
            - apiGroups: [""]
              resources: ["pods", "services"]
              verbs:
                ["create", "delete", "get", "list", "patch", "update", "watch"]
            - apiGroups: ["apps"]
              resources: ["statefulsets"]
              verbs:
                ["create", "delete", "get", "list", "patch", "update", "watch"]
            - apiGroups: ["dragonflydb.io"]
              resources: ["dragonflies"]
              verbs:
                ["create", "delete", "get", "list", "patch", "update", "watch"]
            - apiGroups: ["dragonflydb.io"]
              resources: ["dragonflies/finalizers"]
              verbs: ["update"]
            - apiGroups: ["dragonflydb.io"]
              resources: ["dragonflies/status"]
              verbs: ["get", "patch", "update"]
      bindings:
        gatus:
          type: ClusterRoleBinding
          roleRef:
            identifier: dragonfly-operator
          subjects:
            - identifier: dragonfly-operator

# yaml-language-server: $schema=https://kubernetes-schemas.solanyn.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: oauth2-proxy
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: oauth2-proxy-secret
    template:
      data:
        client-id: kubeflow-oidc-authservice
        client-secret: pUBnBOY80SnXgjibTYM9ZWNzY2xreNGQok
        cookie-secret: 7d16fee92f8d11b8940b081b3f8b8acb
  #       KUBEFLOW_OIDC_CLIENT_ID: "{{ .KUBEFLOW_OIDC_CLIENT_ID }}"
  #       KUBEFLOW_OIDC_CLIENT_SECRET: "{{ .KUBEFLOW_OIDC_CLIENT_SECRET }}"
  #       KUBEFLOW_OAUTH2_PROXY_COOKIE_SECRET: "{{ .KUBEFLOW_OAUTH2_PROXY_COOKIE_SECRET }}"
  # dataFrom:
  #   - extract:
  #       key: kubeflow
---
# yaml-language-server: $schema=https://kubernetes-schemas.solanyn.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: oauth2-proxy-config
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: oauth2-proxy-config-secret
    template:
      data:
        oauth2-proxy.cfg: |
          provider = "oidc"
          oidc_issuer_url = "http://dex.auth.svc.cluster.local:5556/dex"
          scope = "profile email groups openid"
          email_domains = [ "*" ]

          # serve a static HTTP 200 upstream on for authentication success
          # we are using oauth2-proxy as an ExtAuthz to "check" each request, not pass it on
          upstreams = [ "static://200" ]

          # skip authentication for these paths
          skip_auth_routes = [
            "^/dex/",
          ]

          # requests to paths matching these regex patterns will receive a 401 Unauthorized response
          # when not authenticated, instead of being redirected to the login page with a 302,
          # this prevents background requests being redirected to the login page,
          # and the accumulation of CSRF cookies
          api_routes = [
            # Generic
            # NOTE: included because most background requests contain these paths
            "/api/",
            "/apis/",

            # Kubeflow Pipelines
            # NOTE: included because KFP UI makes MANY background requests to these paths but because they are
            #       not `application/json` requests, oauth2-proxy will redirect them to the login page
            "^/ml_metadata",
          ]

          # OIDC Discovery has to be skipped and login url has to be provided directly
          # in order to enable relative auth redirect. Using OIDC Discovery would set
          # the redirect location to http://dex.auth.svc.cluster.local:5556 in the example
          # installation. This address is usually not available through the Web Browser.
          # If you have a setup where dex has it's url as other than the in-cluster
          # service, this is optional.
          skip_oidc_discovery = true
          login_url = "/dex/auth"
          redeem_url = "http://dex.auth.svc.cluster.local:5556/dex/token"
          oidc_jwks_url = "http://dex.auth.svc.cluster.local:5556/dex/keys"

          # if `false`, a sign-in page is displayed before starting the login flow
          # prevents background requests starting their own login flow on token expiry,
          # which can lead to many CSRF cookies, potentially exceeding the cookie limit
          skip_provider_button = false

          # style the sign-in page
          provider_display_name = "Dex"
          custom_sign_in_logo = "/custom-theme/kubeflow-logo.svg"
          banner = "-"
          footer = "-"

          # oauth2-proxy sends "force" by default, which causes dex to always prompt for login
          # https://github.com/dexidp/dex/pull/3086
          prompt = "none"

          # set Authorization Bearer response header. This is needed in order to
          # forward the Authorization Bearer token to Istio and enable authorization
          # based on JWT.
          set_authorization_header = true

          # set X-Auth-Request-User, X-Auth-Request-Groups, X-Auth-Request-Email and
          # X-Auth-Request-Preferred-Username. This is optional for Kubeflow but you
          # may have other services that use standard auth headers.
          set_xauthrequest = true

          cookie_name = "oauth2_proxy_kubeflow"

          # Dex default cookie expiration is 24h.
          # If set to 168h (default oauth2-proxy), Istio will not be able to use the JWT after 24h,
          # but oauth2-proxy will still consider the cookie valid.
          # It's possible to configure the JWT Refresh Token to enable longer login session.
          cookie_expire = "24h"
          cookie_refresh = 0

          code_challenge_method = "S256"

          redirect_url = "/oauth2/callback"
          relative_redirect_url = true
        # oauth2-proxy.cfg: |
        #   # tcp address to listen on
        #   http_address = "0.0.0.0:4180"
        #
        #   # serve a static HTTP 200 upstream on for authentication success
        #   # (this is because we are using oauth2-proxy as an ExtAuthz to "check" each request, not pass it on)
        #   upstreams = [
        #     "static://200"
        #   ]
        #
        #   # requests to paths matching these regex patterns will receive a 401 Unauthorized response
        #   # when not authenticated, instead of being redirected to the login page with a 302
        #   # (prevents background requests being redirected to the login page, and the accumulation of CSRF cookies)
        #   api_routes = [
        #     # Generic
        #     # NOTE: included because most background requests contain these paths
        #     "/api/",
        #     "/apis/",
        #
        #     # Kubeflow Pipelines
        #     # NOTE: included because KFP UI makes MANY background requests to these paths but because they are
        #     #       not `application/json` requests, oauth2-proxy will redirect them to the login page
        #     "^/ml_metadata",
        #   ]
        #
        #   ##############
        #   # branding
        #   ###############
        #   custom_sign_in_logo = "/custom-theme/kubeflow-logo.svg"
        #   banner = "-"
        #   footer = "-"
        #
        #   ###############
        #   # proxy
        #   ###############
        #   reverse_proxy = true
        #   real_client_ip_header = "X-Forwarded-For"
        #
        #   ###############
        #   # logging
        #   ###############
        #   logging_filename = ""
        #   logging_max_size = 100
        #   logging_max_age = 7
        #   standard_logging = true
        #   request_logging = true
        #   auth_logging = true
        #
        #   ###############
        #   # upstream headers (to dex)
        #   ###############
        #   # pass headers: `Authorization`
        #   pass_authorization_header = false
        #
        #   # pass headers: HTTP Basic Auth, `X-Forwarded-User`, `X-Forwarded-Email`
        #   pass_basic_auth = false
        #
        #   # pass headers: `X-Forwarded-User`, `X-Forwarded-Groups`, `X-Forwarded-Email`, `X-Forwarded-Preferred-Username`
        #   pass_user_headers = false
        #
        #   # pass headers: `Host`
        #   pass_host_header = true
        #
        #   ###############
        #   # response headers (to EnvoyFilter)
        #   ###############
        #   # set headers: `Authorization`
        #   set_authorization_header = true
        #
        #   # set headers: `X-Auth-Request-User`, `X-Auth-Request-Groups`, `X-Auth-Request-Email`, `X-Auth-Request-Preferred-Username`
        #   set_xauthrequest = true
        #
        #   ###############
        #   # provider
        #   ###############
        #   provider = "oidc"
        #   provider_display_name = "Dex"
        #
        #   client_id = "{{ .KUBEFLOW_OIDC_CLIENT_ID }}"
        #   client_secret = "{{ .KUBEFLOW_OIDC_CLIENT_SECRET }}"
        #
        #   oidc_email_claim = "email"
        #   oidc_groups_claim = "groups"
        #
        #   # specify the list of scopes to request
        #   # NOTE: offline_access enables refresh tokens (but not all dex connectors support it, notably SAML 2.0)
        #   #       https://dexidp.io/docs/custom-scopes-claims-clients/
        #   #       https://dexidp.io/docs/connectors/
        #   scope = "openid email groups profile offline_access"
        #
        #   oidc_issuer_url = "http://dex.auth.svc.cluster.local:5556/dex"
        #   redirect_url = "https://kubeflow.goyangi.cloud/oauth2/callback"
        #
        #   email_domains = ["*"]
        #
        #   # if false, a sign-in page is shown before redirecting to dex
        #   skip_provider_button = true
        #
        #   # oauth2-proxy sends "force" by default, which causes dex to always prompt for login
        #   # https://github.com/dexidp/dex/pull/3086
        #   prompt = "none"
        #
        #   # oauth2-proxy does not verify nonce claim by default
        #   insecure_oidc_skip_nonce = false
        #
        #   # use PKCE code challenges
        #   code_challenge_method = "S256"
        #
        #   ###############
        #   # bearer token
        #   ###############
        #
        #   # allow bearer tokens to be used for authentication
        #   skip_jwt_bearer_tokens = true
        #
        #   # trust audience claims used by other known dex clients
        #   oidc_extra_audiences = [
        #     "{{ .KUBEFLOW_OIDC_CLIENT_ID }}",
        #     "{{ .KUBEFLOW_GITHUB_CLIENT_ID }}",
        #   ]
        #
        #   ###############
        #   # cookie
        #   ###############
        #   cookie_name = "oauth2_proxy_kubeflow"
        #   cookie_path = "/"
        #   cookie_domains = []
        #   cookie_expire = "24h"
        #   cookie_refresh = "1h"
        #   cookie_secure = true
        #   cookie_httponly = true
        #   cookie_samesite = "lax"
        #   cookie_csrf_expire = "15m"
        #   cookie_csrf_per_request = true
        #   cookie_secret = "{{ .KUBEFLOW_OAUTH2_PROXY_COOKIE_SECRET }}"
  dataFrom:
    - extract:
        key: kubeflow

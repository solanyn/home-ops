# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.15.3
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: volsync-system
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        ingressClassName: internal
        host:
          name: "rook.${SECRET_DOMAIN}"
          path: /
    toolbox:
      enabled: true
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false
      osd_pool_default_min_size = 1
      osd_pool_default_size = 1
    cephClusterSpec:
      mon:
        count: 1
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      mgr:
        count: 1
        modules:
          - name: pg_autoscaler
            enabled: true
      network:
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: true
        useAllDevices: true
        deviceFilter: nvme0n1
        config:
          osdsPerDevice: "1"
      placement:
        mgr: &placement
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
        mon: *placement
      resources:
        mgr:
          requests:
            # cpu: 100m
            cpu: 10m
            # memory: 512Mi
            memory: 10Mi
          limits:
            memory: 2Gi
        mon:
          requests:
            # cpu: 50m
            cpu: 10m
            # memory: 512Mi
            memory: 10Mi
          limits:
            memory: 1Gi
        osd:
          requests:
            # cpu: 200m
            cpu: 10m
            # memory: 2Gi
            memory: 10Mi
          limits:
            memory: 6Gi
        prepareosd:
          requests:
            cpu: 10m
            memory: 10Mi
        mgr-sidecar:
          requests:
            # cpu: 50m
            cpu: 10m
            # memory: 128Mi
            memory: 10Mi
          limits:
            memory: 256Mi
        crashcollector:
          requests:
            cpu: 10m
        logcollector:
          requests:
            cpu: 10m
        cleanup:
          requests:
            cpu: 10m
        exporter:
          requests:
            cpu: 10m
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: osd
          replicated:
            size: 1
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems:
      - name: &cephFileSystemName ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 1
          dataPools:
            - failureDomain: osd
              replicated:
                size: 1
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            priorityClassName: system-cluster-critical
            placement:
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: *cephFileSystemName
            resources:
              requests:
                # cpu: 100m
                cpu: 10m
                # memory: 1Gi
                memory: 10Mi
              limits:
                memory: 4Gi
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: []

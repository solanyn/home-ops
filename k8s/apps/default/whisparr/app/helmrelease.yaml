# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: whisparr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      whisparr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-main-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: whisparr-secret
            env:
              INIT_POSTGRES_DBNAME: whisparr_main
          init-log-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: whisparr-secret
            env:
              INIT_POSTGRES_DBNAME: whisparr-log
        containers:
          app:
            image:
              repository: ghcr.io/hotio/whisparr
              tag: v3@sha256:c102e9cfc32588bdf259bf9ec4615f40506a600b3578e100a6cf8fa2f17f409e
            env:
              WHISPARR__APP__INSTANCENAME: whisparr
              WHISPARR__APP__THEME: dark
              WHISPARR__AUTH__METHOD: External
              WHISPARR__AUTH__REQUIRED: DisabledForLocalAddresses
              WHISPARR__LOG__DBENABLED: "False"
              WHISPARR__LOG__LEVEL: info
              WHISPARR__SERVER__PORT: &port 6969
              TZ: Australia/Sydney
              PUID: 568
              PGID: 568
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: { drop: ["ALL"] }
            resources:
              limits:
                memory: 4Gi
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 568
    #     runAsGroup: 568
    #     fsGroup: 568
    #     fsGroupChangePolicy: OnRootMismatch
    #     supplementalGroups: [10000]
    #     seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: whisparr
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_HOME_DOMAIN}"
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_HOME_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: whisparr
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: 192.168.68.10
        path: /mnt/nfs
        globalMounts:
          - path: /data

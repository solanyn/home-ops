# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lazylibrarian
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      lazylibrarian:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/linuxserver/lazylibrarian
              tag: latest
            env:
              PUID: 1000
              PGID: 1000
              TZ: Australia/Sydney
              DOCKER_MODS: linuxserver/mods:universal-calibre
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 5299
                  initialDelaySeconds: 0
                  periodSeconds: 60
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 4Gi
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: OnRootMismatch
    #     supplementalGroups: [10000]
    #     seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.goyangi.cloud
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.goyangi.cloud"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: lazylibrarian
      cache:
        existingClaim: lazylibrarian-cache
        globalMounts:
          - path: /config/cache
      tmp:
        type: emptyDir
        sizeLimit: 1Gi
      media:
        type: nfs
        server: nas.internal
        path: /mnt/world/media

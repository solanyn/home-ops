name: Sync Kubeflow Manifests

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      upstream_ref:
        description: 'Kubeflow tag or branch to sync (leave blank to auto-detect latest tag)'
        required: false
        default: ''

jobs:
  sync:
    runs-on: ubuntu-latest

    env:
      UPSTREAM_REPO: https://github.com/kubeflow/manifests.git
      COMMIT_EMAIL: "bot-goyangi[bot]@users.noreply.github.com"
      COMMIT_NAME: bot-goyangi[bot]
      DEST_DIR: kubernetes/apps/kubeflow-system/platform/manifests

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine upstream ref (latest tag fallback)
        id: ref
        run: |
          if [ -z "${{ github.event.inputs.upstream_ref }}" ]; then
            latest_tag=$(git ls-remote --tags $UPSTREAM_REPO | grep -o 'refs/tags/.*' | sed 's|refs/tags/||' | sort -V | tail -n1)
            echo "Using latest tag: $latest_tag"
            echo "ref=$latest_tag" >> $GITHUB_OUTPUT
          else
            echo "ref=${{ github.event.inputs.upstream_ref }}" >> $GITHUB_OUTPUT
          fi

      - name: Clone upstream
        run: |
          git clone --depth=1 --branch "${{ steps.ref.outputs.ref }}" "$UPSTREAM_REPO" upstream

      - name: Save previous ref
        id: previous
        run: |
          PREV_FILE=".last-upstream-ref"
          if [[ -f $PREV_FILE ]]; then
            PREV=$(cat $PREV_FILE)
          else
            PREV="unknown"
          fi
          echo "${{ steps.ref.outputs.ref }}" > $PREV_FILE
          echo "from=$PREV" >> $GITHUB_OUTPUT

      - name: Check and sync folder
        id: check
        run: |
          src="upstream/${{ matrix.folder }}"
          dest="${DEST_BASE}/${{ matrix.folder }}"
          mkdir -p "tmp-sync"
          cp -r "$src" "tmp-sync/"

          # Ensure destination folder exists
          mkdir -p "$dest"

          if ! diff -qr "tmp-sync/${{ matrix.folder }}" "$dest" > /dev/null; then
            echo "🔁 Changes found in ${{ matrix.folder }}"
            rm -rf "$dest"/*
            cp -r "tmp-sync/${{ matrix.folder }}"/* "$dest/"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "✅ No changes in ${{ matrix.folder }}"
            echo "changed=false" >> $GITHUB_OUTPUT

      - name: Generate changelog
        if: steps.sync.outputs.changes == 'true'
        id: changelog
        run: |
          git clone "$UPSTREAM_REPO" full-upstream
          cd full-upstream
          git fetch --tags
          from_ref="${{ steps.previous.outputs.from }}"
          to_ref="${{ steps.ref.outputs.ref }}"

          if [[ "$from_ref" == "unknown" ]]; then
            log=$(git log -n 20 --oneline $to_ref)
          else
            log=$(git log --oneline "$from_ref..$to_ref" || echo "No changelog available.")
          fi

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$log" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Commit and push changes
        if: steps.sync.outputs.changes == 'true'
        run: |
          git config user.email "${{ env.COMMIT_EMAIL }}"
          git config user.name "${{ env.COMMIT_NAME }}"
          BRANCH="kubeflow-sync-${{ steps.ref.outputs.ref }}-$(date +%s)"
          git checkout -b "$BRANCH"

          git add $DEST_DIR .last-upstream-ref
          git commit -m "Sync Kubeflow manifests from upstream ${{ steps.ref.outputs.ref }}"
          git push origin "$BRANCH"
          echo "BRANCH_NAME=$BRANCH" >> $GITHUB_ENV

      - name: Show diff summary
        if: steps.sync.outputs.changes == 'true'
        id: diff
        run: |
          summary=$(git diff --stat HEAD~1 HEAD)
          echo "DIFF<<EOF" >> $GITHUB_ENV
          echo "$summary" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Pull Request
        if: steps.sync.outputs.changes == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Sync Kubeflow manifests from ${{ steps.ref.outputs.ref }}
          branch: ${{ env.BRANCH_NAME }}
          title: "Sync Kubeflow manifests from ${{ steps.ref.outputs.ref }}"
          body: |
            ## 📦 Synced Kubeflow Manifests

            Synced the following folders from upstream `${{ steps.ref.outputs.ref }}` into:

            `kubernetes/apps/kubeflow-system/platform/manifests`

            - `common`
            - `apps`
            - `experimental`
            - `example`

            ---
            🔄 **Upgrade From**: `${{ steps.previous.outputs.from }}`
            🚀 **Upgrade To**: `${{ steps.ref.outputs.ref }}`

            ## 📜 Changelog
            ```
            ${{ env.CHANGELOG }}
            ```

            ## 📊 Diff Summary
            ```
            ${{ env.DIFF }}
            ```

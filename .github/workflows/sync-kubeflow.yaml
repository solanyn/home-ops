name: Sync Kubeflow Manifests

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at 00:00 UTC
  workflow_dispatch:
    inputs:
      upstream_ref:
        description: 'Kubeflow tag or branch to sync (leave blank to master)'
        required: false
        default: 'master'

permissions:
  contents: write
  pull-requests: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      upstream_ref: ${{ steps.ref.outputs.ref }}
      previous_ref: ${{ steps.prev.outputs.prev }}
    steps:
      - name: Get latest tag if none provided
        id: ref
        run: |
          if [ -z "${{ github.event.inputs.upstream_ref }}" ]; then
            latest=$(git ls-remote --tags https://github.com/kubeflow/manifests.git | grep -o 'refs/tags/.*' | sed 's|refs/tags/||' | sort -V | tail -n1)
            echo "Auto-detected latest tag: $latest"
            echo "ref=$latest" >> $GITHUB_OUTPUT
          else
            echo "ref=${{ github.event.inputs.upstream_ref }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get previously synced upstream ref
        id: prev
        run: |
          if [[ -f .last-upstream-ref ]]; then
            echo "prev=$(cat .last-upstream-ref)" >> $GITHUB_OUTPUT
          else
            echo "prev=unknown" >> $GITHUB_OUTPUT
          fi

  sync:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: [common, apps, experimental, example]
    outputs:
      changed: ${{ steps.check.outputs.changed }}
    env:
      DEST_BASE: kubernetes/apps/kubeflow-system/platform/manifests/upstream
    steps:
      - uses: actions/checkout@v4

      - name: Clone upstream kubeflow/manifests
        uses: GuillaumeFalourd/clone-github-repo-action@main
        with:
          owner: kubeflow
          repository: manifests
          branch: master
          depth: 1

      - name: Check and sync folder
        id: check
        run: |
          set -e # Exit immediately if a command fails

          src="manifests/${{ matrix.folder }}"
          dest="${DEST_BASE}/${{ matrix.folder }}"

          # Validate source directory exists
          if [ ! -d "$src" ]; then
            echo "Source directory $src not found!"
            exit 1
          fi

          # Remove all OWNERS files
          find "${src}/" -name "OWNERS" -type f -delete

          rm -rf "${dest}/"
          mkdir -p "$dest"

          cp -r "${src}/*" "$dest/"
          echo "changed=true" >> $GITHUB_OUTPUT

      - name: Upload updated folder
        if: steps.check.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: synced-${{ matrix.folder }}
          path: ${{ env.DEST_BASE }}/${{ matrix.folder }}

      - name: Cleanup
        if: always()
        run: |
          rm -rf manifests

  check_changes:
    needs: sync
    runs-on: ubuntu-latest
    outputs:
      any_changes: ${{ steps.check_matrix_outputs.outputs.any_changes }}
    steps:
      - id: check_matrix_outputs
        run: |
          # Find if any matrix job reported changes
          changes="${{ needs.sync.outputs.changed }}"
          # Check if string 'true' appears anywhere in the output
          if [[ "$changes" == *"true"* ]]; then
            echo "any_changes=true" >> $GITHUB_OUTPUT
          else
            echo "any_changes=false" >> $GITHUB_OUTPUT
          fi

  finalize:
    needs: [setup, sync, check_changes]
    runs-on: ubuntu-latest
    if: needs.check_changes.outputs.any_changes == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Download synced folders
        uses: actions/download-artifact@v4
        with:
          pattern: synced-*
          merge-multiple: true
          path: kubernetes/apps/kubeflow-system/platform/manifests/upstream

      - name: Save updated upstream ref
        run: echo "${{ needs.setup.outputs.upstream_ref }}" > .last-upstream-ref

      - name: Generate changelog
        id: changelog
        run: |
          set -e
          git clone --depth=100 https://github.com/kubeflow/manifests.git full-upstream
          cd full-upstream

          from="${{ needs.setup.outputs.previous_ref }}"
          to="${{ needs.setup.outputs.upstream_ref }}"

          # Fetch tags to ensure they're available
          git fetch --tags

          # Generate changelog with error handling
          if [[ "$from" == "unknown" ]]; then
            echo "No previous ref known, showing recent commits"
            log=$(git log -n 20 --oneline "$to" 2>/dev/null || echo "Unable to retrieve commit history.")
          else
            log=$(git log --oneline "$from..$to" 2>/dev/null || echo "No changelog available or unable to generate diff.")
          fi

          cd ..
          # Save changelog to env variable for PR description
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$log" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Cleanup upstream repo
        if: always()
        run: rm -rf full-upstream

      - name: Generate Token
        uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5 # v2
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: "${{ steps.app-token.outputs.token }}"
          signoff: true
          sign-commits: true
          committer: bot-goyangi[bot] <1109230+bot-goyangi[bot]@users.noreply.github.com>
          author: bot-goyangi[bot] <1109230+bot-goyangi[bot]@users.noreply.github.com>
          base: main
          branch-suffix: timestamp
          branch: kubeflow-sync-${{ needs.setup.outputs.upstream_ref }}
          title: "Sync Kubeflow manifests from ${{ needs.setup.outputs.upstream_ref }}"
          reviewers: solanyn
          body: |
            ## ðŸ“¦ Synced Kubeflow Manifests

            Folders synced from upstream ref: `${{ needs.setup.outputs.upstream_ref }}`
            to `kubernetes/apps/kubeflow-system/platform/manifests`.

            ðŸ”„ **From:** `${{ needs.setup.outputs.previous_ref }}`
            ðŸš€ **To:** `${{ needs.setup.outputs.upstream_ref }}`

            ## ðŸ“œ Changelog
            ```
            ${{ env.CHANGELOG }}
            ```

            ## ðŸ“Š Diff Summary
            ```
            ${{ env.DIFF }}

